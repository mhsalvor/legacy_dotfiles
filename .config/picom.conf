#         _                                       __ 
#        (_)                                     / _|
#   _ __  _  ___ ___  _ __ ___    ___ ___  _ __ | |_ 
#  | '_ \| |/ __/ _ \| '_ ` _ \  / __/ _ \| '_ \|  _|
#  | |_) | | (_| (_) | | | | | || (_| (_) | | | | |  
#  | .__/|_|\___\___/|_| |_| |_(_)___\___/|_| |_|_|  
#  | |                                               
#  |_|                                               
#
#  ~/.config/compton.conf - 
#
#  by: Giuseppe (mhsalvor) Molinaro, g.molinaro@linuxmail.org


################################################################################
#   Backend
################################################################################
# Backent do use: "xrender" or glx.
# GLX (OpenGL) is typically much faster but depends on a sane driver.
backend = "glx";    

################################################################################
#   GLX backend   
################################################################################
# Recommended
glx-no-stencil = true;

# GLX backend: Copy unmodified regions from front buffer instead of drawing them
# all.
# May cause slowdowns with nvidia-drivers and nouveau if "true".
# Useful with --glx-swap-method, ad well.
glx-copy-from-front = false;

# GLX backend: Use MESA_copy_sub_buffer to do partial screen update.
# Tests on nouveau show a 200% performance boost when only 1/4 of the screen is
# updated.
# May break VSync on some drivers.
# Overrides --glx-copy-from-front.
# glx-use-cpysubbuffermesa = true;

# GLX backend: Avoid rebinding pixmap on window damage.
# Probably could improve performance on rapid window content changes, but is 
# known to break things on some drivers (LLVMpipe).
# Recommended if it works.
glx-no-rebind-pixmap = true;

# GLX backend: GLX buffer method we assume.
# Could be undefined (0), copy (1), exchange (2), 3-6, or buffer-age (-1).
# 0 undefined is the slowest and the safest, and the default value;
# 1 copy is the fastest, but may fail on some drivers;
# 3-6 are gradually slower but safer (6 is still faster than 0),
#   Usually, double-buffer means 1, triple-buffer means 3;
# buffer-age means auto-detect using GLX_EXT_buffer_age, supported by some 
# drivers.
# Useless with --glx-use-copysubbuffermesa.
# Partially breaks --resize-damage.
# Defaults to undefined.
#glx-swap-method = "undefined"; 

################################################################################
#   Shadows   
################################################################################
# Enable client-side shadows on windows.
shadow = true;
# Don't draw shadows on Drag aNd Drop windows.
#no-dnd-shadow = true; ##DEPRECATED, use wintypes.
# Avoid drawing shadows on dock/panel windows.
#no-dock-shadow = true; ##DEPRECATED, use wintypes.
# Zero the part of the shadow mask behind the window.
# Fixes some weirdness with ARGB windows.
#clear-shadow = true;
# The blur radius for shadows. (default 12)
shadow-radius = 5;    
# The left offset for shadows. (default -15, manjaro 1)
shadow-offset-x = -5;  
# The top offset for shadows. (default -15, manjaro 1)
shadow-offset-y = -5; 
# The translucency for shadows. (default .75, manjaro .3)
shadow-opacity = 0.5;

# Set if you want diffferent colored shadows. (0.0 - 1.0, default 0)
#shadow-red = 0.0;
#shadow-green = 0.0;
#shadow-blue = 0.0;

# Avoid drawing shadows on all shaped windows.
shadow-ignore-shaped = true;    
                               
# The shadow exclude options are helpful if you have shadows enabled. Due to the
# way compton draws its whadows, certain applications will have visual glitches.
# Most applications are fine, only apps that do weird things with xshapes or
# argb are affected.
# This list includes all the affected apps I (and others) found in my (our)
# testing. The "! name~=''" part excludes shadows on any "Unknown" windows, this
# prevents visual glitches with the XFWM alt tab switcher and others cases.
shadow-exclude = [
    "! name ~=''",
	"name = 'Notification'",
#    "name = 'Plank'",
#    "name = 'Docky'",
#    "name = 'Kupfer'",
#    "name = 'xfce4-notifyd'",
#    "name *= 'VLC'",
#    "name *= 'compton'",
#    "name *= 'Chromium'",
#    "name *= 'Chrome'",
#	 "override_redirect = 1 && !WM_CLASS@:s", # workaround for conky until it provides window properties:
#    "class_g = 'Conky'",
#    "class_g = 'Kupfer'",
#    "class_g = 'Synapse'",
#    "class_g ?= 'Notify-osd'",
#    "class_g ?= 'Dmenu'",
#	 "class_g ?= 'Dunst'",
#    "class_g ?= 'Cairo-dock'",
#    "class_g ?= 'Cairo-clock'",
#    "class_g ?= 'Xfce4-notifyd'",
#    "class_g ?= 'Xfce4-power-manager'",
#    "class_g ?= 'firefox' && argb",
	"class_g ?= 'i3-frame'",
#    "n:w:*VirtualBox*",
	"_NET_WM_STATE@:32a *= '_NET_WM_STATE_HIDDEN'", # disable shadows for hidden windows
	"_GTK_FRAME_EXTENTS@:c", # Fix dual shadows on some gtk3 powerd applications
	"_NET_WM_STATE@:32a *= '_NET_WM_STATE_STICKY'" # disables shadows on sticky windows:
];

################################################################################
#   Opacity
################################################################################
# The opacity for menus. (default 1.0)
#menu-opacity = 0.95;     
# Default active windows opacity (0.0 - 1.0)
active-opacity = 1;
# Default inactive windows opacity (0.0 - 1.0)
inactive-opacity = 0.93;    
# Default opacity for titlebars and borders (0.1 - 1.0)
frame-opacity = 1;

# Let the value set by 'inactive-opacity' override that of _NET_WM_OPACITY.
# It's usually a BAD idea.
incactive-opacity-override = false;

# Xrender backend: step size for alpha pictures. Increasing it may result in
# less X resource usage, yet fading my look bad. (default 0.01)
#alpha-step = 0.06;

#Dim inactive windows. (0.0 - 1.0)
inactive-dim = 0.1;
# Don't let dimness adjust based on window opacity.
#inactive-dim-fixed = true;

# Blur background of transparent windows. Bad performance with X Render backend.
# GLX is preferred.
blur-background = true;
# Blur background of opaque windows with transparent frames as well.
#blur-background-frame = true;
# Don't let blur radius adjust based on windows opacity.
blur-backgroud-fixed = false;

# Exlude conditions for background blur.
blur-background-exlude = [
#   "class_g = 'Polybar'",
    "window_type = 'dock",
    "window_type = 'desktop'"
#   "_GTK_FRAME_EXTENTS@:c"
];

#blur-kern = "3x3box";

# Set the default opacity of certain windows.
opacity-rule = [ 
#"99:name *?= 'Call'", 
#"99:class_g = 'Chromium'", 
#"99:name *?= 'Conky'", 
#"99:class_g = 'Darktable'", 
#"50:class_g = 'Dmenu'", 
#"99:name *?= 'Event'", 
"100:class_g = 'firefox' && focused",
"100:class_g = 'firefox' && !focused"
#"99:class_g = 'GIMP'", 
#"99:name *?= 'Image'",
#"99:class_g = 'Lazpaint'", 
#"99:class_g = 'Midori'", 
#"99:name *?= 'Minitube'", 
#"99:class_g = 'Mousepad'",
#"99:name *?= 'MuseScore'", 
#"90:name *?= 'Page Info'", 
#"99:name *?= 'Pale Moon'", 
#"90:name *?= 'Panel'", 
#"99:class_g = 'Pinta'", 
#"90:name *?= 'Restart'", 
#"99:name *?= 'sudo'", 
#"99:name *?= 'Screenshot'", 
#"99:class_g = 'Viewnior'", 
#"99:class_g = 'VirtualBox'", 
#"99:name *?= 'VLC'", 
#"99:name *?= 'Write'", 
#"93:class_g = 'URxvt' && !_NET_WM_STATE@:32a", 
#"0:_NET_WM_STATE@:32a *= '_NET_WM_STATE_HIDDEN'", 
#"96:_NET_WM_STATE@:32a *= '_NET_WM_STATE_STICKY'" 
];

################################################################################
#   Fading
################################################################################
# Fade windows during opacity changes. (default false)
fading = false;
# Time in ms between fading steps. (default 10, manjaro 1)
fade-delta = 4;
# Opacity change between steps while fading in. (default 0.028)
fade-in-step = 0.03;
# Opacity change between steps while fading out. (default 0.03
fade-out-step = 0.03;
# Avoid fading in/out when opening/closing.
no-fading-openclose = false;

# Specify a list of conditions of windows that should not be faded.
fade-exclude = [ ];

################################################################################
#   Other
################################################################################
# Try and detect WM windows and mark them ad active.
mark-wmwin-focused = true;
# Mark all non-WM but override-redirect windows active (e.g. menus).
mark-ovredir-focused = true;

# Use EWMH _NET_WM_ACTIVE_WINDOW to determine which window is focused instead of
# using FocusIn/out events. Using more reliable on a EWMH-copliant WM.
# A list of compliant WMs can be found here:
# https://en.wikipedia.org/wiki/Extended_Window_Manager_Hints
# Both i3wm/i3-gaps and bspwm are EWMH compliant.
use-ewmh-active-win = true;

# Detect rounded corners and treat them as rectangular when
# --shadow-ignore-shaped is on.
# Low accuracy, but better than nothing.
detect-rounded-corners = true; 

# Detect _NET_WM_OPACITY on client windows, useful for WMs non passing
# _NET_WM_OPACITY of client to frame windows.
# This prevents opacity being ignored for some apps.
# For example whithout this enabled my xfce4-notifyd is 100% opacity no matter
# what.
detect-client-opacity = true;           

# Specify refresh rate of the screen.
# If not specified or 0, compton will try detecting this with X RandR extension.
# Important for --sw-opti.
refresh-rate = 60;

# Set VSync method. Vsync methods currently available:
# none : No Vsync;
# drm : VSync with DRM_IOCTL_WAIT_VBLANK. May only work on some drivers.
# opengl : VSync with SGI_video_sync OpenGL extension.
#          Only work on some drivers.
# opengl-oml : VSync with OML_sync_control OpenGL extension.
#              Only work on some drivers.
# opengl-swc : VSync with SGI_sync_control OpenGL extension.
#              Only work on some drivers. Works only with GLX backend.
#              Known to be most effective on many drivers. Does not actually
#              control painting timing, only buffer swap is affected, so it 
#              doesn't have the effect of --sw-opti unlike other methods.
#              Experimantal.
# opengl-mswc : VSync with MESA_swap_control OpenGL ectension. Basically the
#               same as opengl-swc above, except the extension we use.
#(Note: some VSync methods may not be enables at compile time.)
#vsync = "opengl-swc";
vsync = true
# Enable DBE painting mode, intended to use with Csync to (hopefully) eliminate
# tearing.
# Reported to have no effect, though.
dbe = true;
#Painting on X Composite overlay windows. Recommended.
#paint-on-overlay = true;

# Limit compton to repaint at most every 1/refresh_rate seconds to boost
# performance.
# This should not be used tiwh --vsync dmr/opengl/opengl-oml as they
# essentially do --sw-opti's job already,
# unless you wish to specify a lower refresh rate than the actual value.
# It causes tearing on my machine with intel integrated graphics.
#sw-opti = false;

# Uredirect all windows if a full-screen opaque window is detected, to maximize
# performance for full-screen windows, like games.
# Known to cause flickering when redirecting/uredirecting windows.
# paint-on-overlay may make the flickering less obvious.
unredir-if-possible = false; 

# Specify a list of conditions of windows that should always be condidered
# focused.
focus-exclude = [ ];

# Use WM_TRANSIENT_FOR to group windows, and consider windows in the same group
# focused at the same time.
detect-transient = true;   
# Use WM_CLIENT_LEADER to group windows, and consider windows in the same group
# focused at the same time.
# WM_TRANSIENT_FOR has higher priority if --detect-transient is also enabled.
detect-client-leader = true;

# Condition for windows to be painted with inverted colors.
invert-color-include = [ ];

################################################################################
#   Windows type settings
################################################################################
# fade: fade the particular type of windows.
# shadow: give those windows shadow.
# opacity: default opacity for the type of windows.
# focus: whether to always consider windows of this type focused.
# full-shadow: whether the shadow is drawn under parts of the windows normally
#              hidden.
# redir-ignore: whether this windows should cause the screen to become
#               redirected again after being unredirected.
wintypes : 
{
    tooltip =
    {
        fade = true;
        shadow = true;
        opacity = 0.9;
        focus = true;
        full-shadow = false;
    };
    dock =           
    {
        shadow = false;
    };
    dnd :
    {
        shadow = false;
    };
    popup_menu =
    {
        shadow = false;
        opacity = 0.95;
    };
    dropdown_menu =
    { 
        shadow = false;
        opacity = 0.9;
    };
    fullscreen =
    {
        fade = true;
        shadow = false;
        opacity = 1;
        focus = true;
    };
    utility =
    {
        shadow = false;
    };
};

##EOF##
